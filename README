#This project mainly focused on the balance between how to find smaller area in photos and generate noise to attack the model as efficient as possible.
#The time of noise generation is less than 100s per photo.
#Example code is listed here.

def main(args):
    save_dir = args.output
    if not os.path.exists(save_dir):
        os.makedirs(save_dir)

    for idname in range(1, 101):
        tool = PyFAT(N=10)
        if args.device=='cuda':
            tool.set_cuda()
        tool.load('assets')
        str_idname = "%03d"%idname
        iddir = osp.join('images', str_idname)
        att = osp.join(iddir, '0.png')
        vic = osp.join(iddir, '1.png')
        origin_att_img = cv2.imread(att)
        origin_vic_img = cv2.imread(vic)
        for turn in range(tool.size()):
            adv_img = tool.generate(origin_att_img, origin_vic_img, turn)
            save_name = '{}_fake_'.format(str_idname) + str(turn) + '_2.png'
            cv2.imwrite(save_dir + '/' + save_name, adv_img)
